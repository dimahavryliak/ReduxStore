{"ast":null,"code":"var _jsxFileName = \"E:\\\\JS projects\\\\redux-advanced\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport { mainActions } from \"./store/main-slice\";\nimport StatusBarMessage from \"./components/UI/StatusBarMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitialRunning = true;\nfunction App() {\n  _s();\n  const isCartVisible = useSelector(state => state.main.isCartVisible);\n  const cart = useSelector(state => state.cart);\n  const statusMessage = useSelector(state => state.main.statusMessage);\n  const dispatchAction = useDispatch();\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatchAction(mainActions.showStatusMessage({\n        status: \"pending\",\n        title: \"Sending Data\",\n        message: \"Cart Data Sending to Server...\"\n      }));\n      const response = await fetch(\"https://react-learn-e675d-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending Data Error\");\n      }\n      dispatchAction(mainActions.showStatusMessage({\n        status: \"success\",\n        title: \"Data Sent\",\n        message: \"Cart Data Is Successfully sent to Server...\"\n      }));\n    };\n    if (isInitialRunning) {\n      isInitialRunning = false;\n      return;\n    }\n    sendCartData().catch(e => {\n      dispatchAction(mainActions.showStatusMessage({\n        status: \"error\",\n        title: \"Data Error\",\n        message: \"Error occured while sending data\"\n      }));\n    });\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [statusMessage && /*#__PURE__*/_jsxDEV(StatusBarMessage, {\n      status: statusMessage.status,\n      title: statusMessage.title,\n      message: statusMessage.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [isCartVisible && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3NngZFgMftxovalVf555qG7Hyqg=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cart","Layout","Products","useDispatch","useSelector","React","useEffect","mainActions","StatusBarMessage","isInitialRunning","App","isCartVisible","state","main","cart","statusMessage","dispatchAction","sendCartData","showStatusMessage","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","e"],"sources":["E:/JS projects/redux-advanced/src/App.js"],"sourcesContent":["import Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport { mainActions } from \"./store/main-slice\";\nimport StatusBarMessage from \"./components/UI/StatusBarMessage\";\n\nlet isInitialRunning = true;\n\nfunction App() {\n  const isCartVisible = useSelector((state) => state.main.isCartVisible);\n  const cart = useSelector((state) => state.cart);\n  const statusMessage = useSelector((state) => state.main.statusMessage);\n\n  const dispatchAction = useDispatch();\n\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatchAction(\n        mainActions.showStatusMessage({\n          status: \"pending\",\n          title: \"Sending Data\",\n          message: \"Cart Data Sending to Server...\",\n        })\n      );\n      const response = await fetch(\n        \"https://react-learn-e675d-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Sending Data Error\");\n      }\n\n      dispatchAction(\n        mainActions.showStatusMessage({\n          status: \"success\",\n          title: \"Data Sent\",\n          message: \"Cart Data Is Successfully sent to Server...\",\n        })\n      );\n    };\n\n    if (isInitialRunning) {\n      isInitialRunning = false;\n      return;\n    }\n\n    sendCartData().catch((e) => {\n      dispatchAction(\n        mainActions.showStatusMessage({\n          status: \"error\",\n          title: \"Data Error\",\n          message: \"Error occured while sending data\",\n        })\n      );\n    });\n  }, [cart]);\n\n  return (\n    <React.Fragment>\n      {statusMessage && (\n        <StatusBarMessage\n          status={statusMessage.status}\n          title={statusMessage.title}\n          message={statusMessage.message}\n        />\n      )}\n      <Layout>\n        {isCartVisible && <Cart />}\n        <Products />\n      </Layout>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,gBAAgB,MAAM,kCAAkC;AAAC;AAEhE,IAAIC,gBAAgB,GAAG,IAAI;AAE3B,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,aAAa,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,aAAa,CAAC;EACtE,MAAMG,IAAI,GAAGV,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACE,IAAI,CAAC;EAC/C,MAAMC,aAAa,GAAGX,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACE,aAAa,CAAC;EAEtE,MAAMC,cAAc,GAAGb,WAAW,EAAE;EAEpCG,SAAS,CAAC,MAAM;IACd,MAAMW,YAAY,GAAG,YAAY;MAC/BD,cAAc,CACZT,WAAW,CAACW,iBAAiB,CAAC;QAC5BC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,cAAc;QACrBC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;MACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEAAiE,EACjE;QACEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI;MAC3B,CAAC,CACF;MACD,IAAI,CAACQ,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACvC;MAEAb,cAAc,CACZT,WAAW,CAACW,iBAAiB,CAAC;QAC5BC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,WAAW;QAClBC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH,CAAC;IAED,IAAIZ,gBAAgB,EAAE;MACpBA,gBAAgB,GAAG,KAAK;MACxB;IACF;IAEAQ,YAAY,EAAE,CAACa,KAAK,CAAEC,CAAC,IAAK;MAC1Bf,cAAc,CACZT,WAAW,CAACW,iBAAiB,CAAC;QAC5BC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,YAAY;QACnBC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,WACZC,aAAa,iBACZ,QAAC,gBAAgB;MACf,MAAM,EAAEA,aAAa,CAACI,MAAO;MAC7B,KAAK,EAAEJ,aAAa,CAACK,KAAM;MAC3B,OAAO,EAAEL,aAAa,CAACM;IAAQ;MAAA;MAAA;MAAA;IAAA,QAElC,eACD,QAAC,MAAM;MAAA,WACJV,aAAa,iBAAI,QAAC,IAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eAC1B,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACM;AAErB;AAAC,GAnEQD,GAAG;EAAA,QACYN,WAAW,EACpBA,WAAW,EACFA,WAAW,EAEVD,WAAW;AAAA;AAAA,KAL3BO,GAAG;AAqEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}