{"ast":null,"code":"import { asyncThunkCreator, createSlice } from \"@reduxjs/toolkit\";\nimport { mainActions } from \"./main-slice\";\nconst initialState = {\n  items: [],\n  itemsQuantity: 0,\n  isCartContentChanged: false\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.isCartContentChanged = true;\n      state.itemsQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          title: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.price * existingItem.quantity;\n      }\n    },\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.isCartContentChanged = true;\n      state.itemsQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n    updateCart(state, action) {\n      state.items = action.payload.items;\n      state.itemsQuantity = action.payload.itemsQuantity;\n    }\n  }\n});\nexport const sendCartData = cartData => {\n  return async dispatchAction => {\n    dispatchAction(mainActions.showStatusMessage({\n      status: \"pending\",\n      title: \"Sending Data\",\n      message: \"Cart Data Sending to Server...\"\n    }));\n    const sendDataHttpRequest = async () => {\n      const response = await fetch(\"https://react-learn-e675d-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          items: cartData.items,\n          itemsQuantity: cartData.itemsQuantity\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending Data Error\");\n      }\n    };\n    try {\n      await sendDataHttpRequest();\n      dispatchAction(mainActions.showStatusMessage({\n        status: \"success\",\n        title: \"Data Sent\",\n        message: \"Cart Data Is Successfully sent to Server\"\n      }));\n    } catch (error) {\n      dispatchAction(mainActions.showStatusMessage({\n        status: \"error\",\n        title: \"Data Error\",\n        message: \"Error occured while sending data\"\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport const getCartData = () => {\n  return async dispatchAction => {\n    const getDataHttpRequest = async () => {\n      const response = await fetch(\"https://react-learn-e675d-default-rtdb.firebaseio.com/cart.json\");\n      if (!response.ok) {\n        throw new Error(\"Unable to get Data\");\n      }\n      const responseData = await response.json();\n      return responseData;\n    };\n    try {\n      const cartData = await getDataHttpRequest();\n      dispatchAction(cartActions.updateCart({\n        items: cartData.items || [],\n        itemsQuantity: cartData.itemsQuantity\n      }));\n    } catch (e) {\n      dispatchAction(mainActions.showStatusMessage({\n        status: \"error\",\n        title: \"Data Error\",\n        message: \"Error occured while getting data\"\n      }));\n    }\n  };\n};\nexport default cartSlice;","map":{"version":3,"names":["asyncThunkCreator","createSlice","mainActions","initialState","items","itemsQuantity","isCartContentChanged","cartSlice","name","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItem","filter","updateCart","sendCartData","cartData","dispatchAction","showStatusMessage","status","message","sendDataHttpRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions","getCartData","getDataHttpRequest","responseData","json","e"],"sources":["E:/JS projects/redux-advanced/src/store/cart-slice.js"],"sourcesContent":["import { asyncThunkCreator, createSlice } from \"@reduxjs/toolkit\";\r\nimport { mainActions } from \"./main-slice\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  itemsQuantity: 0,\r\n  isCartContentChanged: false,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addItem(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.isCartContentChanged = true;\r\n      state.itemsQuantity++;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          title: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.price * existingItem.quantity;\r\n      }\r\n    },\r\n    removeItem(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      state.isCartContentChanged = true;\r\n\r\n      state.itemsQuantity--;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n\r\n    updateCart(state, action) {\r\n      state.items = action.payload.items;\r\n      state.itemsQuantity = action.payload.itemsQuantity;\r\n    },\r\n  },\r\n});\r\n\r\nexport const sendCartData = (cartData) => {\r\n  return async (dispatchAction) => {\r\n    dispatchAction(\r\n      mainActions.showStatusMessage({\r\n        status: \"pending\",\r\n        title: \"Sending Data\",\r\n        message: \"Cart Data Sending to Server...\",\r\n      })\r\n    );\r\n\r\n    const sendDataHttpRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://react-learn-e675d-default-rtdb.firebaseio.com/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            items: cartData.items,\r\n            itemsQuantity: cartData.itemsQuantity,\r\n          }),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Sending Data Error\");\r\n      }\r\n    };\r\n    try {\r\n      await sendDataHttpRequest();\r\n      dispatchAction(\r\n        mainActions.showStatusMessage({\r\n          status: \"success\",\r\n          title: \"Data Sent\",\r\n          message: \"Cart Data Is Successfully sent to Server\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatchAction(\r\n        mainActions.showStatusMessage({\r\n          status: \"error\",\r\n          title: \"Data Error\",\r\n          message: \"Error occured while sending data\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport const getCartData = () => {\r\n  return async (dispatchAction) => {\r\n    const getDataHttpRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://react-learn-e675d-default-rtdb.firebaseio.com/cart.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Unable to get Data\");\r\n      }\r\n\r\n      const responseData = await response.json();\r\n      return responseData;\r\n    };\r\n    try {\r\n      const cartData = await getDataHttpRequest();\r\n      dispatchAction(\r\n        cartActions.updateCart({\r\n          items: cartData.items || [],\r\n          itemsQuantity: cartData.itemsQuantity,\r\n        })\r\n      );\r\n    } catch (e) {\r\n      dispatchAction(\r\n        mainActions.showStatusMessage({\r\n          status: \"error\",\r\n          title: \"Data Error\",\r\n          message: \"Error occured while getting data\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default cartSlice;\r\n"],"mappings":"AAAA,SAASA,iBAAiB,EAAEC,WAAW,QAAQ,kBAAkB;AACjE,SAASC,WAAW,QAAQ,cAAc;AAE1C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE,CAAC;EAChBC,oBAAoB,EAAE;AACxB,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC5BO,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvEP,KAAK,CAACL,oBAAoB,GAAG,IAAI;MACjCK,KAAK,CAACN,aAAa,EAAE;MACrB,IAAI,CAACU,YAAY,EAAE;QACjBJ,KAAK,CAACP,KAAK,CAACe,IAAI,CAAC;UACfD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAET,OAAO,CAACO,KAAK;UACzBG,KAAK,EAAEV,OAAO,CAACU;QACjB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACK,KAAK,GAAGL,YAAY,CAACM,QAAQ;MACtE;IACF,CAAC;IACDG,UAAU,CAACb,KAAK,EAAEC,MAAM,EAAE;MACxB,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC/DP,KAAK,CAACL,oBAAoB,GAAG,IAAI;MAEjCK,KAAK,CAACN,aAAa,EAAE;MACrB,IAAIU,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAE;QAC/BV,KAAK,CAACP,KAAK,GAAGO,KAAK,CAACP,KAAK,CAACqB,MAAM,CAAER,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACLH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACK,KAAK;MACxE;IACF,CAAC;IAEDM,UAAU,CAACf,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACE,OAAO,CAACV,KAAK;MAClCO,KAAK,CAACN,aAAa,GAAGO,MAAM,CAACE,OAAO,CAACT,aAAa;IACpD;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMsB,YAAY,GAAIC,QAAQ,IAAK;EACxC,OAAO,MAAOC,cAAc,IAAK;IAC/BA,cAAc,CACZ3B,WAAW,CAAC4B,iBAAiB,CAAC;MAC5BC,MAAM,EAAE,SAAS;MACjBR,KAAK,EAAE,cAAc;MACrBS,OAAO,EAAE;IACX,CAAC,CAAC,CACH;IAED,MAAMC,mBAAmB,GAAG,YAAY;MACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEAAiE,EACjE;QACEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBnC,KAAK,EAAEwB,QAAQ,CAACxB,KAAK;UACrBC,aAAa,EAAEuB,QAAQ,CAACvB;QAC1B,CAAC;MACH,CAAC,CACF;MACD,IAAI,CAAC6B,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACvC;IACF,CAAC;IACD,IAAI;MACF,MAAMR,mBAAmB,EAAE;MAC3BJ,cAAc,CACZ3B,WAAW,CAAC4B,iBAAiB,CAAC;QAC5BC,MAAM,EAAE,SAAS;QACjBR,KAAK,EAAE,WAAW;QAClBS,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdb,cAAc,CACZ3B,WAAW,CAAC4B,iBAAiB,CAAC;QAC5BC,MAAM,EAAE,OAAO;QACfR,KAAK,EAAE,YAAY;QACnBS,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMW,WAAW,GAAGpC,SAAS,CAACqC,OAAO;AAE5C,OAAO,MAAMC,WAAW,GAAG,MAAM;EAC/B,OAAO,MAAOhB,cAAc,IAAK;IAC/B,MAAMiB,kBAAkB,GAAG,YAAY;MACrC,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEAAiE,CAClE;MAED,IAAI,CAACD,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACvC;MAEA,MAAMM,YAAY,GAAG,MAAMb,QAAQ,CAACc,IAAI,EAAE;MAC1C,OAAOD,YAAY;IACrB,CAAC;IACD,IAAI;MACF,MAAMnB,QAAQ,GAAG,MAAMkB,kBAAkB,EAAE;MAC3CjB,cAAc,CACZc,WAAW,CAACjB,UAAU,CAAC;QACrBtB,KAAK,EAAEwB,QAAQ,CAACxB,KAAK,IAAI,EAAE;QAC3BC,aAAa,EAAEuB,QAAQ,CAACvB;MAC1B,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAO4C,CAAC,EAAE;MACVpB,cAAc,CACZ3B,WAAW,CAAC4B,iBAAiB,CAAC;QAC5BC,MAAM,EAAE,OAAO;QACfR,KAAK,EAAE,YAAY;QACnBS,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH;EACF,CAAC;AACH,CAAC;AAED,eAAezB,SAAS"},"metadata":{},"sourceType":"module"}